	const userData = {
		USD: 1000,
		EUR: 900,
		UAH: 15000,
		BIF: 20000,
		AOA: 100
	};

	const bankData = {
	    USD: {
		max: 3000,
		min: 100,
		img: 'üíµ'
	    },
	    EUR: {
		max: 1000,
		min: 50,
		img: 'üí∂'
	    },
	    UAH: {
		max: 0,
		min: 0,
		img: 'üí¥'
	    },
	    GBP: {
		max: 10000,
		min: 100,
		img: 'üí∑'
	    }
	}

	function getMoney(){
	  let balance = prompt('–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è –±–∞–ª–∞–Ω—Å –∫–∞—Ä—Ç—ñ?(–¢–∞–∫/–ù—ñ)').toLowerCase()
	  let newPromice = new Promise((resolve, reject) => {
	    if(balance == '—Ç–∞–∫'){
		resolve(true)
	    }else if(balance == '–Ω—ñ'){
		reject(false)
	    }else{
		location.reload() 
	    }
	  })

	  newPromice
	    .then(
	    (resolve) =>{
	      while(true){
		let currency = prompt('–û–±–µ—Ä—ñ—Ç—å –≤–∞–ª—é—Ç—É: USD, EUR, UAH, BIF, AOA').toUpperCase()
		let userCurrency = Object.keys(userData).filter(el => el == currency)
		  if(userCurrency == 'USD'){
		    console.log(`–ë–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ${userData.USD} USD`)
		    break
		  }else if(userCurrency == 'EUR'){
		    console.log(`–ë–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ${userData.EUR} EUR`)
		    break
		  }else if(userCurrency == 'UAH'){
		    console.log(`–ë–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ${userData.UAH} UAH`)
		    break
		  }else if(userCurrency == 'BIF'){
		    console.log(`–ë–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ${userData.BIF} BIF`)
		    break
		  }else if(userCurrency == 'AOA'){
		    console.log(`–ë–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ${userData.AOA} AOA`)
		    break
		  }
	      }
	      },
	    (reject) =>{
	      while(true){
		let userCurrency = prompt('–û–±–µ—Ä—ñ—Ç—å –≤–∞–ª—é—Ç—É –¥–ª—è –∑–Ω—è—Ç—Ç—è: USD, EUR, UAH, GBP').toUpperCase()  //–≤–∞–ª—é—Ç–∞ –æ—Ç –ø–æ–ª—å–∑
		if(userCurrency == 'USD'){
		  getMonney(userCurrency, userData, bankData)
		  break
		}else if(userCurrency == 'EUR'){
		  getMonney(userCurrency, userData, bankData)
		  break
		}else if(userCurrency == 'UAH'){
		  getMonney(userCurrency, userData, bankData)
		  break
		}else if(userCurrency == 'GBP'){
		  getMonney(userCurrency, userData, bankData)
		  break
		}
	      }
	      function getMonney(userCurrency,userData, bankData){
		let userCash = Object.entries(userData).find(el => el[0] == userCurrency)// –≤–æ–∑–≤–∞—Ç –≤–∞–ª—é—Ç—ã - –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—å–∑ —Å–æ–≥–ª–∞—Å–Ω–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–π –≤–∞–ª—é—Ç—ã

		let bankCurrency = Object.entries(bankData).find(el => el[0] == userCurrency) // –≤–æ–∑–≤–∞—Ç –≤–∞–ª—é—Ç—ã - –∑–Ω–∞—á–µ–Ω–∏—è –±–∞–Ω–∫–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–π –≤–∞–ª—é—Ç—ã

		let cash = prompt('–Ø–∫—É —Å—É–º–º–∞ —Ö–æ—á–µ—Ç–µ –∑–Ω—è—Ç–∏?') 
		let maxCash = Object.entries(bankCurrency[1]).filter(el => el[0] == 'max').flat() //–≤–æ–∑–≤—Ä–∞—Ç –º–∞—Å—Å–∏–≤–∞ –∏–∑ –±–∞–ª–∞–Ω—Å–∞ –±–∞–Ω–∫–∞ —Å –º–∞–∫—Å –∑–Ω–∞—á
		let minCash = Object.entries(bankCurrency[1]).filter(el => el[0] == 'min').flat() //–≤–æ–∑–≤—Ä–∞—Ç –º–∞—Å—Å–∏–≤–∞ –∏–∑ –±–∞–ª–∞–Ω—Å–∞ –±–∞–Ω–∫–∞ —Å –º–∏–Ω –∑–Ω–∞—á
		  if(cash < maxCash[1] && cash <= userCash[1] && cash > minCash[1]){
		      console.log(`–û—Ç –≤–∞—à—ñ –≥—Ä–æ—à—ñ ${cash} ${bankCurrency[1].img}`)
		  }else if(cash < minCash[1]){
		      console.log(`–í–≤–µ–¥–µ–Ω–∞ —Å—É–º–∞ –º–µ–Ω—à–∞ –∑–∞ –¥–æ—Å—Ç—É–ø–Ω—É. –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–Ω—è—Ç—Ç—è: ${minCash[1]}`)
		  }else if(cash > maxCash[1]){
		    console.log(`–í–≤–µ–¥–µ–Ω–∞ —Å—É–º–∞ –±—ñ–ª—å—à–∞ –∑–∞ –¥–æ—Å—Ç—É–ø–Ω—É. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–Ω—è—Ç—Ç—è: ${maxCash[1]}`)
		  }else{
		      console.log(`–í–≤–µ–¥–µ–Ω–∞ —Å—É–º–∞ –±—ñ–ª—å—à–∞ –∑–∞ –¥–æ—Å—Ç—É–ø–Ω—É. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–Ω—è—Ç—Ç—è: ${userCash[1]}`)
		  }
		}
	})
	    .finally(
	      () => {
		console.log('–î—è–∫—É—é, –≥–∞—Ä–Ω–æ–≥–æ –¥–Ω—è üòä')
	      }
	    )
	}
	getMoney()


        
